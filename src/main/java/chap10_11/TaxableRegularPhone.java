package chap10_11;import chap05.Money;import java.time.Duration;public class TaxableRegularPhone extends RegularPhone {	private double taxRate;	public TaxableRegularPhone(Money amount, Duration seconds, double taxRate) {		super(amount, seconds);		this.taxRate = taxRate;	}	/*	 지금은 단일 훅으로 제공되고 있으나, 만약 케이스마다 클래스를 생성하게 된다면 .. ?	 class explosion !! 단일 기능을 위해 상속을 사용 하게 되면, 너무 많은 class 들이 생겨난다.	 이걸 해결하기 위해 합성을 사용한다.	 -> 정적인 의존성을 동적으로 수정한다. (런타임 의존성 vs 컴파일 의존성)	 또한 phone 이 할인 정책 및 tax를 들고있는건 너무 많은 책임을 들고 있는 것 같음.	 */	@Override	protected Money afterCalculated(Money fee) {		return fee.plus(fee.times(taxRate));	}}